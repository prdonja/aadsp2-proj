1     	 0000					.public _degree
2     	 0000					.public _gain
3     	 0000					.public _invertEnable
4     	 0000					.public _inverter
5     	 0000					.extern _sampleBuffer
6     	 0000					.public _audio_invert_init
7     	 0000					.public _gst_audio_invert_transform
8     	 0000					.public _processing
9     							.xdata_ovly
9      >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
10    	 0000				__extractedConst_0_1
11    	 0000					.dw  (0x7ffcb924)
	 0000	 7FFCB924	 
12    							.xdata_ovly
12     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
13    	 0000				__extractedConst_1_1
14    	 0000					.dw  (0x346dc)
	 0000	 000346DC	 
15    							.xdata_ovly
15     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
16    	 0000				__extractedConst_2_5
17    	 0000					.dw  (0x3fffffff)
	 0000	 3FFFFFFF	 
18    							.xdata_ovly
18     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
19    	 0000				_degree
20    	 0000					.bss (0x1)
21    							.xdata_ovly
21     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
22    	 0000				_gain
23    	 0000					.bss (0x1)
24    							.xdata_ovly
24     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
25    	 0000				_invertEnable
26    	 0000					.bss (0x1)
27    							.xdata_ovly
27     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
28    	 0000				_inverter
29    	 0000					.bss (0x2)
30    							.code_ovly
30     >> start of macro: .code_ovly
1+    									seg_single , "CODE_OVLY", CODE
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_CODE_ )
2+    						    segment
3+    						  .else
4+    						    segment "CODE_OVLY"
5+    							.if "" != ""
6+    						___SegStart_CODE_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .code_ovly
31    						
32    						
33    						
34    	 0000				_audio_invert_init:			/* LN: 8 | CYCLE: 0 | RULES: () */ 
35    	 0000	 BB540007		xmem[i7] = i7			# LN: 8 | 
36    	 0001	 020F7FFF		i7 += 1			# LN: 8 | 
37    	 0002				cline_8_0:			/* LN: 10 | CYCLE: 0 | RULES: () */ 
38    	 0002	 88040000		a0 = xmem[_degree + 0]			# LN: 10 | 
39    	 0003	 98440000		xmem[_inverter + 0] = a0h			# LN: 10 | 
40    	 0004				cline_10_0:			/* LN: 11 | CYCLE: 0 | RULES: () */ 
41    	 0004	 88040000		a0 = xmem[_gain + 0]			# LN: 11 | 
42    	 0005	 98440001		xmem[_inverter + 1] = a0h			# LN: 11 | 
43    	 0006				cline_11_0:			/* LN: 12 | CYCLE: 0 | RULES: () */ 
44    	 0006	 80080007		jmp (__epilogue_104)			# LN: 12 | 
45    	 0007				__epilogue_104:			/* LN: 12 | CYCLE: 0 | RULES: () */ 
46    	 0007	 02177FFF		i7 -= 1			# LN: 12 | 
47    	 0008	 81880000		ret			# LN: 12 | 
48    						
49    						
50    						
51    	 0009				_gst_audio_invert_transform:			/* LN: 14 | CYCLE: 0 | RULES: () */ 
52    	 0009	 BB540007		xmem[i7] = i7			# LN: 14 | 
53    	 000A	 020F7FFF		i7 += 1			# LN: 14 | 
54    	 000B	 87750009		i7 = i7 + (0x9)			# LN: 14 | 
55    	 000C	 94750001		i4 = i7 - (0x1)			# LN: 14 | 
56    	 000D	 B0540004		xmem[i4] = i0			# LN: 14 | 
57    	 000E	 90750002		i0 = i7 - (0x2)			# LN: 14 | 
58    	 000F	 B1540000		xmem[i0] = i1			# LN: 14 | 
59    	 0010				cline_14_0:			/* LN: 17 | CYCLE: 0 | RULES: () */ 
60    	 0010	 88040000		a0 = xmem[_inverter + 0]			# LN: 17 | 
61    	 0011	 89040000		a1 = xmem[__extractedConst_0_1 + 0]			# LN: 17 | 
62    	 0012	 000044C0		a0 = a1 - a0			# LN: 17 | 
63    	 0013	 90750003		i0 = i7 - (0x3)			# LN: 17 | 
64    	 0014	 98540000		xmem[i0] = a0h			# LN: 17 | 
65    	 0015				cline_17_0:			/* LN: 20 | CYCLE: 0 | RULES: () */ 
66    	 0015	 90750004		i0 = i7 - (0x4)			# LN: 20 | 
67    	 0016	 887A4000		a0 = (0x4000)			# LN: 20 | 
68    	 0017	 98540000		xmem[i0] = a0h			# LN: 20 | 
69    	 0018				cline_20_0:			/* LN: 22 | CYCLE: 0 | RULES: () */ 
70    	 0018	 90750003		i0 = i7 - (0x3)			# LN: 22 | 
71    	 0019	 88140000		a0 = xmem[i0]			# LN: 22 | 
72    	 001A	 89040000		a1 = xmem[__extractedConst_1_1 + 0]			# LN: 22 | 
73    	 001B	 00004408		a0 = a0 + a1			# LN: 22 | 
74    	 001C	 90750003		i0 = i7 - (0x3)			# LN: 22 | 
75    	 001D	 98540000		xmem[i0] = a0h			# LN: 22 | 
76    	 001E				cline_22_0:			/* LN: 24 | CYCLE: 0 | RULES: () */ 
77    	 001E	 90750005		i0 = i7 - (0x5)			# LN: 24 | 
78    	 001F	 00004DC0		a0 = 0			# LN: 24 | 
79    	 0020	 98540000		xmem[i0] = a0h			# LN: 24 | 
80    	 0021	 81000052		do (0x10), label_end_92			# LN: 24 | 
81    	 0022				cline_24_0:			/* LN: 26 | CYCLE: 0 | RULES: () */ 
82    	 0022				label_begin_92:			/* LN: 24 | CYCLE: 0 | RULES: () */ 
83    	 0022	 90750001		i0 = i7 - (0x1)			# LN: 26 | 
84    	 0023	 B0140000		i0 = xmem[i0]			# LN: 26 | 
85    	 0024	 91750004		i1 = i7 - (0x4)			# LN: 26 | 
86    	 0025	 88140000		a0 = xmem[i0]			# LN: 26 | 
87    	 0026	 19414E40		a1 = xmem[i1]; a0 = a0 >> 1			# LN: 26, 26 | 
88    	 0027	 00004480		a0 = a1 + a0			# LN: 26 | 
89    	 0028	 90750006		i0 = i7 - (0x6)			# LN: 26 | 
90    	 0029	 98540000		xmem[i0] = a0h			# LN: 26 | 
91    	 002A				cline_26_0:			/* LN: 27 | CYCLE: 0 | RULES: () */ 
92    	 002A	 90750001		i0 = i7 - (0x1)			# LN: 27 | 
93    	 002B	 B0140000		i0 = xmem[i0]			# LN: 27 | 
94    	 002C	 91750003		i1 = i7 - (0x3)			# LN: 27 | 
95    	 002D	 88140000		a0 = xmem[i0]			# LN: 27 | 
96    	 002E	 10414E40		x0 = xmem[i1]; a0 = a0 >> 1			# LN: 27, 27 | 
97    	 002F	 01587FFF		x1 = a0h			# LN: 27 | 
98    	 0030	 84040000		y0 = xmem[_inverter + 0]			# LN: 27 | 
99    	 0031	 90750006		i0 = i7 - (0x6)			# LN: 27 | 
100   	 0032	 10402020		x0 = xmem[i0]; a0 = x1 * x0			# LN: 27, 27 | 
101   	 0033	 00002418		a0 -= x0 * y0			# LN: 27 | 
102   	 0034	 90750009		i0 = i7 - (0x9)			# LN: 27 | 
103   	 0035	 A0540010		xmem[i0] = a0g; i0 += 1			# LN: 27, 27 | 
104   	 0036	 98540010		xmem[i0] = a0h; i0 += 1			# LN: 27, 27 | 
105   	 0037	 90540000		xmem[i0] = a0l			# LN: 27 | 
106   	 0038				cline_27_0:			/* LN: 28 | CYCLE: 0 | RULES: () */ 
107   	 0038	 90750001		i0 = i7 - (0x1)			# LN: 28 | 
108   	 0039	 B0140000		i0 = xmem[i0]			# LN: 28 | 
109   	 003A	 91750001		i1 = i7 - (0x1)			# LN: 28 | 
110   	 003B	 02087FFF		i0 += 1			# LN: 28 | 
111   	 003C	 B0540001		xmem[i1] = i0			# LN: 28 | 
112   	 003D				cline_28_0:			/* LN: 29 | CYCLE: 0 | RULES: () */ 
113   	 003D	 90750009		i0 = i7 - (0x9)			# LN: 29 | 
114   	 003E	 A0140010		a0g = xmem[i0]; i0 += 1			# LN: 29, 29 | 
115   	 003F	 98140010		a0h = xmem[i0]; i0 += 1			# LN: 29, 29 | 
116   	 0040	 90140000		a0l = xmem[i0]			# LN: 29 | 
117   	 0041	 48407FFF		x0 = a0			# LN: 29 | 
118   	 0042	 81040001		x1 = xmem[_inverter + 1]			# LN: 29 | 
119   	 0043	 00002080		a0 = x0 * x1			# LN: 29 | 
120   	 0044	 90750002		i0 = i7 - (0x2)			# LN: 29 | 
121   	 0045	 B0140000		i0 = xmem[i0]			# LN: 29 | 
122   	 0046	 00004E00		a0 = a0 << 1			# LN: 29 | 
123   	 0047	 88540000		xmem[i0] = a0			# LN: 29 | 
124   	 0048				cline_29_0:			/* LN: 30 | CYCLE: 0 | RULES: () */ 
125   	 0048	 90750002		i0 = i7 - (0x2)			# LN: 30 | 
126   	 0049	 B0140000		i0 = xmem[i0]			# LN: 30 | 
127   	 004A	 91750002		i1 = i7 - (0x2)			# LN: 30 | 
128   	 004B	 02087FFF		i0 += 1			# LN: 30 | 
129   	 004C	 B0540001		xmem[i1] = i0			# LN: 30 | 
130   	 004D				cline_30_0:			/* LN: 24 | CYCLE: 0 | RULES: () */ 
131   	 004D				init_latch_label_0:			/* LN: 31 | CYCLE: 0 | RULES: () */ 
132   	 004D	 90750005		i0 = i7 - (0x5)			# LN: 24 | 
133   	 004E	 88140000		a0 = xmem[i0]			# LN: 24 | 
134   	 004F	 894A0001		uhalfword(a1) = (0x1)			# LN: 24 | 
135   	 0050	 00004408		a0 = a0 + a1			# LN: 24 | 
136   	 0051	 90750005		i0 = i7 - (0x5)			# LN: 24 | 
137   	 0052				label_end_92:			# LN: 24 | CYCLE: 5 | RULES: ()
138   	 0052	 98540000		xmem[i0] = a0h			# LN: 24 | 
139   	 0053				cline_24_1:			/* LN: 32 | CYCLE: 0 | RULES: () */ 
140   	 0053				for_end_0:			/* LN: 24 | CYCLE: 0 | RULES: () */ 
141   	 0053	 80080054		jmp (__epilogue_106)			# LN: 32 | 
142   	 0054				__epilogue_106:			/* LN: 32 | CYCLE: 0 | RULES: () */ 
143   	 0054	 97750009		i7 = i7 - (0x9)			# LN: 32 | 
144   	 0055	 02177FFF		i7 -= 1			# LN: 32 | 
145   	 0056	 81880000		ret			# LN: 32 | 
146   						
147   						
148   						
149   	 0057				_processing:			/* LN: 34 | CYCLE: 0 | RULES: () */ 
150   	 0057	 BB540007		xmem[i7] = i7			# LN: 34 | 
151   	 0058	 020F7FFF		i7 += 1			# LN: 34 | 
152   	 0059	 87750026		i7 = i7 + (0x26)			# LN: 34 | 
153   	 005A				cline_34_0:			/* LN: 36 | CYCLE: 0 | RULES: () */ 
154   	 005A	 90750001		i0 = i7 - (0x1)			# LN: 36 | 
155   	 005B	 00004DC0		a0 = 0			# LN: 36 | 
156   	 005C	 98540000		xmem[i0] = a0h			# LN: 36 | 
157   	 005D				cline_36_0:			/* LN: 37 | CYCLE: 0 | RULES: () */ 
158   	 005D	 90750002		i0 = i7 - (0x2)			# LN: 37 | 
159   	 005E	 00004DC0		a0 = 0			# LN: 37 | 
160   	 005F	 98540000		xmem[i0] = a0h			# LN: 37 | 
161   	 0060				cline_37_0:			/* LN: 38 | CYCLE: 0 | RULES: () */ 
162   	 0060	 90750003		i0 = i7 - (0x3)			# LN: 38 | 
163   	 0061	 00004DC0		a0 = 0			# LN: 38 | 
164   	 0062	 98540000		xmem[i0] = a0h			# LN: 38 | 
165   	 0063				cline_38_0:			/* LN: 45 | CYCLE: 0 | RULES: () */ 
166   	 0063	 90750014		i0 = i7 - (0x14)			# LN: 45 | 
167   	 0064	 91750013		i1 = i7 - (19 - 0)			# LN: 45 | 
168   	 0065	 08717FFF		a0 = i1			# LN: 45 | 
169   	 0066	 88540000		xmem[i0] = a0			# LN: 45 | 
170   	 0067				cline_45_0:			/* LN: 46 | CYCLE: 0 | RULES: () */ 
171   	 0067	 90750025		i0 = i7 - (0x25)			# LN: 46 | 
172   	 0068	 91750024		i1 = i7 - (36 - 0)			# LN: 46 | 
173   	 0069	 08717FFF		a0 = i1			# LN: 46 | 
174   	 006A	 88540000		xmem[i0] = a0			# LN: 46 | 
175   	 006B				cline_46_0:			/* LN: 48 | CYCLE: 0 | RULES: () */ 
176   	 006B	 80880000		call (_audio_invert_init)			# LN: 48 | 
177   	 006C				cline_48_0:			/* LN: 50 | CYCLE: 0 | RULES: () */ 
178   	 006C	 90750026		i0 = i7 - (0x26)			# LN: 50 | 
179   	 006D	 884A0000		uhalfword(a0) = (_sampleBuffer + 0)			# LN: 50 | 
180   	 006E	 88540000		xmem[i0] = a0			# LN: 50 | 
181   	 006F				cline_50_0:			/* LN: 52 | CYCLE: 0 | RULES: () */ 
182   	 006F	 90750001		i0 = i7 - (0x1)			# LN: 52 | 
183   	 0070	 00004DC0		a0 = 0			# LN: 52 | 
184   	 0071	 98540000		xmem[i0] = a0h			# LN: 52 | 
185   	 0072	 81000094		do (0x10), label_end_93			# LN: 52 | 
186   	 0073				cline_52_0:			/* LN: 54 | CYCLE: 0 | RULES: () */ 
187   	 0073				label_begin_93:			/* LN: 52 | CYCLE: 0 | RULES: () */ 
188   	 0073	 90750026		i0 = i7 - (0x26)			# LN: 54 | 
189   	 0074	 B0140000		i0 = xmem[i0]			# LN: 54 | 
190   	 0075	 91750014		i1 = i7 - (0x14)			# LN: 54 | 
191   	 0076	 B1140001		i1 = xmem[i1]			# LN: 54 | 
192   	 0077	 88140000		a0 = xmem[i0]			# LN: 54 | 
193   	 0078	 98540001		xmem[i1] = a0h			# LN: 54 | 
194   	 0079				cline_54_0:			/* LN: 55 | CYCLE: 0 | RULES: () */ 
195   	 0079	 90750026		i0 = i7 - (0x26)			# LN: 55 | 
196   	 007A	 B0140000		i0 = xmem[i0]			# LN: 55 | 
197   	 007B	 91750025		i1 = i7 - (0x25)			# LN: 55 | 
198   	 007C	 80050010		i0 = i0 + (0x10)			# LN: 55 | 
199   	 007D	 B1140001		i1 = xmem[i1]			# LN: 55 | 
200   	 007E	 88140000		a0 = xmem[i0]			# LN: 55 | 
201   	 007F	 98540001		xmem[i1] = a0h			# LN: 55 | 
202   	 0080				cline_55_0:			/* LN: 57 | CYCLE: 0 | RULES: () */ 
203   	 0080	 90750014		i0 = i7 - (0x14)			# LN: 57 | 
204   	 0081	 B0140000		i0 = xmem[i0]			# LN: 57 | 
205   	 0082	 91750014		i1 = i7 - (0x14)			# LN: 57 | 
206   	 0083	 02087FFF		i0 += 1			# LN: 57 | 
207   	 0084	 B0540001		xmem[i1] = i0			# LN: 57 | 
208   	 0085				cline_57_0:			/* LN: 58 | CYCLE: 0 | RULES: () */ 
209   	 0085	 90750025		i0 = i7 - (0x25)			# LN: 58 | 
210   	 0086	 B0140000		i0 = xmem[i0]			# LN: 58 | 
211   	 0087	 91750025		i1 = i7 - (0x25)			# LN: 58 | 
212   	 0088	 02087FFF		i0 += 1			# LN: 58 | 
213   	 0089	 B0540001		xmem[i1] = i0			# LN: 58 | 
214   	 008A				cline_58_0:			/* LN: 60 | CYCLE: 0 | RULES: () */ 
215   	 008A	 90750026		i0 = i7 - (0x26)			# LN: 60 | 
216   	 008B	 B0140000		i0 = xmem[i0]			# LN: 60 | 
217   	 008C	 91750026		i1 = i7 - (0x26)			# LN: 60 | 
218   	 008D	 02087FFF		i0 += 1			# LN: 60 | 
219   	 008E	 B0540001		xmem[i1] = i0			# LN: 60 | 
220   	 008F				cline_60_0:			/* LN: 52 | CYCLE: 0 | RULES: () */ 
221   	 008F				init_latch_label_1:			/* LN: 61 | CYCLE: 0 | RULES: () */ 
222   	 008F	 90750001		i0 = i7 - (0x1)			# LN: 52 | 
223   	 0090	 88140000		a0 = xmem[i0]			# LN: 52 | 
224   	 0091	 894A0001		uhalfword(a1) = (0x1)			# LN: 52 | 
225   	 0092	 00004408		a0 = a0 + a1			# LN: 52 | 
226   	 0093	 90750001		i0 = i7 - (0x1)			# LN: 52 | 
227   	 0094				label_end_93:			# LN: 52 | CYCLE: 5 | RULES: ()
228   	 0094	 98540000		xmem[i0] = a0h			# LN: 52 | 
229   	 0095				cline_52_1:			/* LN: 63 | CYCLE: 0 | RULES: () */ 
230   	 0095				for_end_1:			/* LN: 52 | CYCLE: 0 | RULES: () */ 
231   	 0095	 90750014		i0 = i7 - (0x14)			# LN: 63 | 
232   	 0096	 91750013		i1 = i7 - (19 - 0)			# LN: 63 | 
233   	 0097	 08717FFF		a0 = i1			# LN: 63 | 
234   	 0098	 88540000		xmem[i0] = a0			# LN: 63 | 
235   	 0099				cline_63_0:			/* LN: 64 | CYCLE: 0 | RULES: () */ 
236   	 0099	 90750025		i0 = i7 - (0x25)			# LN: 64 | 
237   	 009A	 91750024		i1 = i7 - (36 - 0)			# LN: 64 | 
238   	 009B	 08717FFF		a0 = i1			# LN: 64 | 
239   	 009C	 88540000		xmem[i0] = a0			# LN: 64 | 
240   	 009D				cline_64_0:			/* LN: 66 | CYCLE: 0 | RULES: () */ 
241   	 009D	 90750026		i0 = i7 - (0x26)			# LN: 66 | 
242   	 009E	 884A0000		uhalfword(a0) = (_sampleBuffer + 0)			# LN: 66 | 
243   	 009F	 88540000		xmem[i0] = a0			# LN: 66 | 
244   	 00A0				cline_66_0:			/* LN: 68 | CYCLE: 0 | RULES: () */ 
245   	 00A0	 90750001		i0 = i7 - (0x1)			# LN: 68 | 
246   	 00A1	 00004DC0		a0 = 0			# LN: 68 | 
247   	 00A2	 98540000		xmem[i0] = a0h			# LN: 68 | 
248   	 00A3	 81000123		do (0x10), label_end_94			# LN: 68 | 
249   	 00A4				cline_68_0:			/* LN: 71 | CYCLE: 0 | RULES: () */ 
250   	 00A4				label_begin_94:			/* LN: 68 | CYCLE: 0 | RULES: () */ 
251   	 00A4	 90750026		i0 = i7 - (0x26)			# LN: 71 | 
252   	 00A5	 B0140000		i0 = xmem[i0]			# LN: 71 | 
253   	 00A6	 807A4000		x0 = (0x4000)			# LN: 71 | 
254   	 00A7	 81140000		x1 = xmem[i0]			# LN: 71 | 
255   	 00A8	 90750026		i0 = i7 - (0x26)			# LN: 71 | 
256   	 00A9	 B0140000		i0 = xmem[i0]			# LN: 71 | 
257   	 00AA	 00002020		a0 = x1 * x0			# LN: 71 | 
258   	 00AB	 88540000		xmem[i0] = a0			# LN: 71 | 
259   	 00AC				cline_71_0:			/* LN: 72 | CYCLE: 0 | RULES: () */ 
260   	 00AC	 90750026		i0 = i7 - (0x26)			# LN: 72 | 
261   	 00AD	 B0140000		i0 = xmem[i0]			# LN: 72 | 
262   	 00AE	 91750025		i1 = i7 - (0x25)			# LN: 72 | 
263   	 00AF	 88140000		a0 = xmem[i0]			# LN: 72 | 
264   	 00B0	 B0140001		i0 = xmem[i1]			# LN: 72 | 
265   	 00B1	 80040000		x0 = xmem[__extractedConst_2_5 + 0]			# LN: 72 | 
266   	 00B2	 81140000		x1 = xmem[i0]			# LN: 72 | 
267   	 00B3	 90750026		i0 = i7 - (0x26)			# LN: 72 | 
268   	 00B4	 B0140000		i0 = xmem[i0]			# LN: 72 | 
269   	 00B5	 00002028		a0 += x1 * x0			# LN: 72 | 
270   	 00B6	 88540000		xmem[i0] = a0			# LN: 72 | 
271   	 00B7				cline_72_0:			/* LN: 75 | CYCLE: 0 | RULES: () */ 
272   	 00B7	 90750026		i0 = i7 - (0x26)			# LN: 75 | 
273   	 00B8	 B0140000		i0 = xmem[i0]			# LN: 75 | 
274   	 00B9	 91750014		i1 = i7 - (0x14)			# LN: 75 | 
275   	 00BA	 B1140001		i1 = xmem[i1]			# LN: 75 | 
276   	 00BB	 80050010		i0 = i0 + (0x10)			# LN: 75 | 
277   	 00BC	 80140001		x0 = xmem[i1]			# LN: 75 | 
278   	 00BD	 817A4000		x1 = (0x4000)			# LN: 75 | 
279   	 00BE	 00002080		a0 = x0 * x1			# LN: 75 | 
280   	 00BF	 88540000		xmem[i0] = a0			# LN: 75 | 
281   	 00C0				cline_75_0:			/* LN: 76 | CYCLE: 0 | RULES: () */ 
282   	 00C0	 90750026		i0 = i7 - (0x26)			# LN: 76 | 
283   	 00C1	 B0140000		i0 = xmem[i0]			# LN: 76 | 
284   	 00C2	 91750026		i1 = i7 - (0x26)			# LN: 76 | 
285   	 00C3	 B1140001		i1 = xmem[i1]			# LN: 76 | 
286   	 00C4	 80050010		i0 = i0 + (0x10)			# LN: 76 | 
287   	 00C5	 81150010		i1 = i1 + (0x10)			# LN: 76 | 
288   	 00C6	 88140001		a0 = xmem[i1]			# LN: 76 | 
289   	 00C7	 91750025		i1 = i7 - (0x25)			# LN: 76 | 
290   	 00C8	 B1140001		i1 = xmem[i1]			# LN: 76 | 
291   	 00C9	 80040000		x0 = xmem[__extractedConst_2_5 + 0]			# LN: 76 | 
292   	 00CA	 81140001		x1 = xmem[i1]			# LN: 76 | 
293   	 00CB	 00002028		a0 += x1 * x0			# LN: 76 | 
294   	 00CC	 88540000		xmem[i0] = a0			# LN: 76 | 
295   	 00CD				cline_76_0:			/* LN: 79 | CYCLE: 0 | RULES: () */ 
296   	 00CD	 90750026		i0 = i7 - (0x26)			# LN: 79 | 
297   	 00CE	 B0140000		i0 = xmem[i0]			# LN: 79 | 
298   	 00CF	 91750014		i1 = i7 - (0x14)			# LN: 79 | 
299   	 00D0	 B1140001		i1 = xmem[i1]			# LN: 79 | 
300   	 00D1	 80050020		i0 = i0 + (0x20)			# LN: 79 | 
301   	 00D2	 80140001		x0 = xmem[i1]			# LN: 79 | 
302   	 00D3	 817A4000		x1 = (0x4000)			# LN: 79 | 
303   	 00D4	 00002080		a0 = x0 * x1			# LN: 79 | 
304   	 00D5	 88540000		xmem[i0] = a0			# LN: 79 | 
305   	 00D6				cline_79_0:			/* LN: 80 | CYCLE: 0 | RULES: () */ 
306   	 00D6	 90750026		i0 = i7 - (0x26)			# LN: 80 | 
307   	 00D7	 B0140000		i0 = xmem[i0]			# LN: 80 | 
308   	 00D8	 91750026		i1 = i7 - (0x26)			# LN: 80 | 
309   	 00D9	 B1140001		i1 = xmem[i1]			# LN: 80 | 
310   	 00DA	 80050020		i0 = i0 + (0x20)			# LN: 80 | 
311   	 00DB	 81150020		i1 = i1 + (0x20)			# LN: 80 | 
312   	 00DC	 88140001		a0 = xmem[i1]			# LN: 80 | 
313   	 00DD	 91750025		i1 = i7 - (0x25)			# LN: 80 | 
314   	 00DE	 B1140001		i1 = xmem[i1]			# LN: 80 | 
315   	 00DF	 80040000		x0 = xmem[__extractedConst_2_5 + 0]			# LN: 80 | 
316   	 00E0	 81140001		x1 = xmem[i1]			# LN: 80 | 
317   	 00E1	 00002028		a0 += x1 * x0			# LN: 80 | 
318   	 00E2	 88540000		xmem[i0] = a0			# LN: 80 | 
319   	 00E3				cline_80_0:			/* LN: 83 | CYCLE: 0 | RULES: () */ 
320   	 00E3	 90750026		i0 = i7 - (0x26)			# LN: 83 | 
321   	 00E4	 B0140000		i0 = xmem[i0]			# LN: 83 | 
322   	 00E5	 91750014		i1 = i7 - (0x14)			# LN: 83 | 
323   	 00E6	 B1140001		i1 = xmem[i1]			# LN: 83 | 
324   	 00E7	 80050030		i0 = i0 + (0x30)			# LN: 83 | 
325   	 00E8	 80140001		x0 = xmem[i1]			# LN: 83 | 
326   	 00E9	 817A4000		x1 = (0x4000)			# LN: 83 | 
327   	 00EA	 00002080		a0 = x0 * x1			# LN: 83 | 
328   	 00EB	 88540000		xmem[i0] = a0			# LN: 83 | 
329   	 00EC				cline_83_0:			/* LN: 84 | CYCLE: 0 | RULES: () */ 
330   	 00EC	 90750026		i0 = i7 - (0x26)			# LN: 84 | 
331   	 00ED	 B0140000		i0 = xmem[i0]			# LN: 84 | 
332   	 00EE	 91750026		i1 = i7 - (0x26)			# LN: 84 | 
333   	 00EF	 B1140001		i1 = xmem[i1]			# LN: 84 | 
334   	 00F0	 80050030		i0 = i0 + (0x30)			# LN: 84 | 
335   	 00F1	 81150030		i1 = i1 + (0x30)			# LN: 84 | 
336   	 00F2	 88140001		a0 = xmem[i1]			# LN: 84 | 
337   	 00F3	 91750025		i1 = i7 - (0x25)			# LN: 84 | 
338   	 00F4	 B1140001		i1 = xmem[i1]			# LN: 84 | 
339   	 00F5	 80040000		x0 = xmem[__extractedConst_2_5 + 0]			# LN: 84 | 
340   	 00F6	 81140001		x1 = xmem[i1]			# LN: 84 | 
341   	 00F7	 00002028		a0 += x1 * x0			# LN: 84 | 
342   	 00F8	 88540000		xmem[i0] = a0			# LN: 84 | 
343   	 00F9				cline_84_0:			/* LN: 87 | CYCLE: 0 | RULES: () */ 
344   	 00F9	 90750026		i0 = i7 - (0x26)			# LN: 87 | 
345   	 00FA	 B0140000		i0 = xmem[i0]			# LN: 87 | 
346   	 00FB	 91750014		i1 = i7 - (0x14)			# LN: 87 | 
347   	 00FC	 B1140001		i1 = xmem[i1]			# LN: 87 | 
348   	 00FD	 80050040		i0 = i0 + (0x40)			# LN: 87 | 
349   	 00FE	 80140001		x0 = xmem[i1]			# LN: 87 | 
350   	 00FF	 817A4000		x1 = (0x4000)			# LN: 87 | 
351   	 0100	 00002080		a0 = x0 * x1			# LN: 87 | 
352   	 0101	 88540000		xmem[i0] = a0			# LN: 87 | 
353   	 0102				cline_87_0:			/* LN: 88 | CYCLE: 0 | RULES: () */ 
354   	 0102	 90750014		i0 = i7 - (0x14)			# LN: 88 | 
355   	 0103	 B0140000		i0 = xmem[i0]			# LN: 88 | 
356   	 0104	 91750014		i1 = i7 - (0x14)			# LN: 88 | 
357   	 0105	 02087FFF		i0 += 1			# LN: 88 | 
358   	 0106	 B0540001		xmem[i1] = i0			# LN: 88 | 
359   	 0107				cline_88_0:			/* LN: 89 | CYCLE: 0 | RULES: () */ 
360   	 0107	 90750026		i0 = i7 - (0x26)			# LN: 89 | 
361   	 0108	 B0140000		i0 = xmem[i0]			# LN: 89 | 
362   	 0109	 91750026		i1 = i7 - (0x26)			# LN: 89 | 
363   	 010A	 B1140001		i1 = xmem[i1]			# LN: 89 | 
364   	 010B	 80050040		i0 = i0 + (0x40)			# LN: 89 | 
365   	 010C	 81150040		i1 = i1 + (0x40)			# LN: 89 | 
366   	 010D	 88140001		a0 = xmem[i1]			# LN: 89 | 
367   	 010E	 91750025		i1 = i7 - (0x25)			# LN: 89 | 
368   	 010F	 B1140001		i1 = xmem[i1]			# LN: 89 | 
369   	 0110	 80040000		x0 = xmem[__extractedConst_2_5 + 0]			# LN: 89 | 
370   	 0111	 81140001		x1 = xmem[i1]			# LN: 89 | 
371   	 0112	 00002028		a0 += x1 * x0			# LN: 89 | 
372   	 0113	 88540000		xmem[i0] = a0			# LN: 89 | 
373   	 0114				cline_89_0:			/* LN: 90 | CYCLE: 0 | RULES: () */ 
374   	 0114	 90750025		i0 = i7 - (0x25)			# LN: 90 | 
375   	 0115	 B0140000		i0 = xmem[i0]			# LN: 90 | 
376   	 0116	 91750025		i1 = i7 - (0x25)			# LN: 90 | 
377   	 0117	 02087FFF		i0 += 1			# LN: 90 | 
378   	 0118	 B0540001		xmem[i1] = i0			# LN: 90 | 
379   	 0119				cline_90_0:			/* LN: 91 | CYCLE: 0 | RULES: () */ 
380   	 0119	 90750026		i0 = i7 - (0x26)			# LN: 91 | 
381   	 011A	 B0140000		i0 = xmem[i0]			# LN: 91 | 
382   	 011B	 91750026		i1 = i7 - (0x26)			# LN: 91 | 
383   	 011C	 02087FFF		i0 += 1			# LN: 91 | 
384   	 011D	 B0540001		xmem[i1] = i0			# LN: 91 | 
385   	 011E				cline_91_0:			/* LN: 68 | CYCLE: 0 | RULES: () */ 
386   	 011E				init_latch_label_2:			/* LN: 92 | CYCLE: 0 | RULES: () */ 
387   	 011E	 90750001		i0 = i7 - (0x1)			# LN: 68 | 
388   	 011F	 88140000		a0 = xmem[i0]			# LN: 68 | 
389   	 0120	 894A0001		uhalfword(a1) = (0x1)			# LN: 68 | 
390   	 0121	 00004408		a0 = a0 + a1			# LN: 68 | 
391   	 0122	 90750001		i0 = i7 - (0x1)			# LN: 68 | 
392   	 0123				label_end_94:			# LN: 68 | CYCLE: 5 | RULES: ()
393   	 0123	 98540000		xmem[i0] = a0h			# LN: 68 | 
394   	 0124				cline_68_1:			/* LN: 94 | CYCLE: 0 | RULES: () */ 
395   	 0124				for_end_2:			/* LN: 68 | CYCLE: 0 | RULES: () */ 
396   	 0124	 88040000		a0 = xmem[_invertEnable + 0]			# LN: 94 | 
397   	 0125	 00004E80		a0 & a0			# LN: 94 | 
398   	 0126	 8408012B		if (a == 0) jmp (else_0)			# LN: 94 | 
399   	 0127				cline_94_0:			/* LN: 96 | CYCLE: 0 | RULES: () */ 
400   	 0127	 A0050000		i0 = (0) + (_sampleBuffer + 32)			# LN: 96 | 
401   	 0128	 A1050000		i1 = (0) + (_sampleBuffer + 32)			# LN: 96 | 
402   	 0129	 80880009		call (_gst_audio_invert_transform)			# LN: 96 | 
403   	 012A	 8008012B		jmp (endif_0)			# LN: 96 | 
404   	 012B				cline_96_0:			/* LN: 99 | CYCLE: 0 | RULES: () */ 
405   	 012B				endif_0:			/* LN: 94 | CYCLE: 0 | RULES: () */ 
406   	 012B				else_0:			/* LN: 94 | CYCLE: 0 | RULES: () */ 
407   	 012B	 88040000		a0 = xmem[_invertEnable + 0]			# LN: 99 | 
408   	 012C	 00004E80		a0 & a0			# LN: 99 | 
409   	 012D	 84080132		if (a == 0) jmp (else_1)			# LN: 99 | 
410   	 012E				cline_99_0:			/* LN: 101 | CYCLE: 0 | RULES: () */ 
411   	 012E	 A0050000		i0 = (0) + (_sampleBuffer + 48)			# LN: 101 | 
412   	 012F	 A1050000		i1 = (0) + (_sampleBuffer + 48)			# LN: 101 | 
413   	 0130	 80880009		call (_gst_audio_invert_transform)			# LN: 101 | 
414   	 0131	 80080132		jmp (endif_1)			# LN: 101 | 
415   	 0132				cline_101_0:			/* LN: 104 | CYCLE: 0 | RULES: () */ 
416   	 0132				endif_1:			/* LN: 99 | CYCLE: 0 | RULES: () */ 
417   	 0132				else_1:			/* LN: 99 | CYCLE: 0 | RULES: () */ 
418   	 0132	 88040000		a0 = xmem[_invertEnable + 0]			# LN: 104 | 
419   	 0133	 00004E80		a0 & a0			# LN: 104 | 
420   	 0134	 84080139		if (a == 0) jmp (else_2)			# LN: 104 | 
421   	 0135				cline_104_0:			/* LN: 106 | CYCLE: 0 | RULES: () */ 
422   	 0135	 A0050000		i0 = (0) + (_sampleBuffer + 64)			# LN: 106 | 
423   	 0136	 A1050000		i1 = (0) + (_sampleBuffer + 64)			# LN: 106 | 
424   	 0137	 80880009		call (_gst_audio_invert_transform)			# LN: 106 | 
425   	 0138	 80080139		jmp (endif_2)			# LN: 106 | 
426   	 0139				cline_106_0:			/* LN: 110 | CYCLE: 0 | RULES: () */ 
427   	 0139				endif_2:			/* LN: 104 | CYCLE: 0 | RULES: () */ 
428   	 0139				else_2:			/* LN: 104 | CYCLE: 0 | RULES: () */ 
429   	 0139	 8008013A		jmp (__epilogue_108)			# LN: 110 | 
430   	 013A				__epilogue_108:			/* LN: 110 | CYCLE: 0 | RULES: () */ 
431   	 013A	 97750026		i7 = i7 - (0x26)			# LN: 110 | 
432   	 013B	 02177FFF		i7 -= 1			# LN: 110 | 
433   	 013C	 81880000		ret			# LN: 110 | 
434   						(null)
				 SYMBOL TABLE 

    Name                                                                                    Type                  Value 

_COMMON_INC_PATH_                                                               					 Define                 "C:/CirrusDSP/crystal32/common/inc/"
_DSP_                                                                           					 Define                 "a"
_LOCAL_INC_PATH_                                                                					 Define                 "inc/"
_LOCAL_SRC_PATH_                                                                					 Define                 "src/"
_MUI_VERSION_                                                                   					 Define                 "020000"
_OVLY_                                                                          					 Define                 "standalone"
_OVLY_REVISION_                                                                 					 Define                 "020000"
_ROUTER_INC_PATH_                                                               					 Define                 "rom_inc/"
_SLOT_                                                                          					 Define                 "0"
_TARGET_FAMILY_                                                                 					 Define                 "crystal32"
_TOOLS_VERSION_                                                                 					 Define                 "0x0701"
_VERSION_                                                                       					 Define                 "00"
__CASM_VER__                                                                    			  Unused Variable		        0 (701H)
__epilogue_104                                                                  			         Relocatable         processing_GEN_0007:0007H
__epilogue_106                                                                  			         Relocatable         processing_GEN_0007:0054H
__epilogue_108                                                                  			         Relocatable         processing_GEN_0007:013AH
__extractedConst_0_1                                                            			         Relocatable         processing_GEN_0000:0000H
__extractedConst_1_1                                                            			         Relocatable         processing_GEN_0001:0000H
__extractedConst_2_5                                                            			         Relocatable         processing_GEN_0002:0000H
_audio_invert_init                                                              			  Public Relocatable       processing_GEN_0007:0000H
_degree                                                                         			  Public Relocatable       processing_GEN_0003:0000H
_gain                                                                           			  Public Relocatable       processing_GEN_0004:0000H
_gst_audio_invert_transform                                                     			  Public Relocatable       processing_GEN_0007:0009H
_invertEnable                                                                   			  Public Relocatable       processing_GEN_0005:0000H
_inverter                                                                       			  Public Relocatable       processing_GEN_0006:0000H
_processing                                                                     			  Public Relocatable       processing_GEN_0007:0057H
_sampleBuffer                                                                   					 External   
cline_101_0                                                                     			  Unused Relocatable        processing_GEN_0007:0132H
cline_104_0                                                                     			  Unused Relocatable        processing_GEN_0007:0135H
cline_106_0                                                                     			  Unused Relocatable        processing_GEN_0007:0139H
cline_10_0                                                                      			  Unused Relocatable        processing_GEN_0007:0004H
cline_11_0                                                                      			  Unused Relocatable        processing_GEN_0007:0006H
cline_14_0                                                                      			  Unused Relocatable        processing_GEN_0007:0010H
cline_17_0                                                                      			  Unused Relocatable        processing_GEN_0007:0015H
cline_20_0                                                                      			  Unused Relocatable        processing_GEN_0007:0018H
cline_22_0                                                                      			  Unused Relocatable        processing_GEN_0007:001EH
cline_24_0                                                                      			  Unused Relocatable        processing_GEN_0007:0022H
cline_24_1                                                                      			  Unused Relocatable        processing_GEN_0007:0053H
cline_26_0                                                                      			  Unused Relocatable        processing_GEN_0007:002AH
cline_27_0                                                                      			  Unused Relocatable        processing_GEN_0007:0038H
cline_28_0                                                                      			  Unused Relocatable        processing_GEN_0007:003DH
cline_29_0                                                                      			  Unused Relocatable        processing_GEN_0007:0048H
cline_30_0                                                                      			  Unused Relocatable        processing_GEN_0007:004DH
cline_34_0                                                                      			  Unused Relocatable        processing_GEN_0007:005AH
cline_36_0                                                                      			  Unused Relocatable        processing_GEN_0007:005DH
cline_37_0                                                                      			  Unused Relocatable        processing_GEN_0007:0060H
cline_38_0                                                                      			  Unused Relocatable        processing_GEN_0007:0063H
cline_45_0                                                                      			  Unused Relocatable        processing_GEN_0007:0067H
cline_46_0                                                                      			  Unused Relocatable        processing_GEN_0007:006BH
cline_48_0                                                                      			  Unused Relocatable        processing_GEN_0007:006CH
cline_50_0                                                                      			  Unused Relocatable        processing_GEN_0007:006FH
cline_52_0                                                                      			  Unused Relocatable        processing_GEN_0007:0073H
cline_52_1                                                                      			  Unused Relocatable        processing_GEN_0007:0095H
cline_54_0                                                                      			  Unused Relocatable        processing_GEN_0007:0079H
cline_55_0                                                                      			  Unused Relocatable        processing_GEN_0007:0080H
cline_57_0                                                                      			  Unused Relocatable        processing_GEN_0007:0085H
cline_58_0                                                                      			  Unused Relocatable        processing_GEN_0007:008AH
cline_60_0                                                                      			  Unused Relocatable        processing_GEN_0007:008FH
cline_63_0                                                                      			  Unused Relocatable        processing_GEN_0007:0099H
cline_64_0                                                                      			  Unused Relocatable        processing_GEN_0007:009DH
cline_66_0                                                                      			  Unused Relocatable        processing_GEN_0007:00A0H
cline_68_0                                                                      			  Unused Relocatable        processing_GEN_0007:00A4H
cline_68_1                                                                      			  Unused Relocatable        processing_GEN_0007:0124H
cline_71_0                                                                      			  Unused Relocatable        processing_GEN_0007:00ACH
cline_72_0                                                                      			  Unused Relocatable        processing_GEN_0007:00B7H
cline_75_0                                                                      			  Unused Relocatable        processing_GEN_0007:00C0H
cline_76_0                                                                      			  Unused Relocatable        processing_GEN_0007:00CDH
cline_79_0                                                                      			  Unused Relocatable        processing_GEN_0007:00D6H
cline_80_0                                                                      			  Unused Relocatable        processing_GEN_0007:00E3H
cline_83_0                                                                      			  Unused Relocatable        processing_GEN_0007:00ECH
cline_84_0                                                                      			  Unused Relocatable        processing_GEN_0007:00F9H
cline_87_0                                                                      			  Unused Relocatable        processing_GEN_0007:0102H
cline_88_0                                                                      			  Unused Relocatable        processing_GEN_0007:0107H
cline_89_0                                                                      			  Unused Relocatable        processing_GEN_0007:0114H
cline_8_0                                                                       			  Unused Relocatable        processing_GEN_0007:0002H
cline_90_0                                                                      			  Unused Relocatable        processing_GEN_0007:0119H
cline_91_0                                                                      			  Unused Relocatable        processing_GEN_0007:011EH
cline_94_0                                                                      			  Unused Relocatable        processing_GEN_0007:0127H
cline_96_0                                                                      			  Unused Relocatable        processing_GEN_0007:012BH
cline_99_0                                                                      			  Unused Relocatable        processing_GEN_0007:012EH
else_0                                                                          			         Relocatable         processing_GEN_0007:012BH
else_1                                                                          			         Relocatable         processing_GEN_0007:0132H
else_2                                                                          			         Relocatable         processing_GEN_0007:0139H
endif_0                                                                         			         Relocatable         processing_GEN_0007:012BH
endif_1                                                                         			         Relocatable         processing_GEN_0007:0132H
endif_2                                                                         			         Relocatable         processing_GEN_0007:0139H
for_end_0                                                                       			  Unused Relocatable        processing_GEN_0007:0053H
for_end_1                                                                       			  Unused Relocatable        processing_GEN_0007:0095H
for_end_2                                                                       			  Unused Relocatable        processing_GEN_0007:0124H
init_latch_label_0                                                              			  Unused Relocatable        processing_GEN_0007:004DH
init_latch_label_1                                                              			  Unused Relocatable        processing_GEN_0007:008FH
init_latch_label_2                                                              			  Unused Relocatable        processing_GEN_0007:011EH
label_begin_92                                                                  			  Unused Relocatable        processing_GEN_0007:0022H
label_begin_93                                                                  			  Unused Relocatable        processing_GEN_0007:0073H
label_begin_94                                                                  			  Unused Relocatable        processing_GEN_0007:00A4H
label_end_92                                                                    			         Relocatable         processing_GEN_0007:0052H
label_end_93                                                                    			         Relocatable         processing_GEN_0007:0094H
label_end_94                                                                    			         Relocatable         processing_GEN_0007:0123H

	       SEGMENTS:

Size			  Name										 Class
0000H	 __INIT                                  			 CODE                                    
0001H	 processing_GEN_0000                     			 X_OVLY                                  
0001H	 processing_GEN_0001                     			 X_OVLY                                  
0001H	 processing_GEN_0002                     			 X_OVLY                                  
0001H	 processing_GEN_0003                     			 X_OVLY                                  
0001H	 processing_GEN_0004                     			 X_OVLY                                  
0001H	 processing_GEN_0005                     			 X_OVLY                                  
0002H	 processing_GEN_0006                     			 X_OVLY                                  
013DH	 processing_GEN_0007                     			 CODE_OVLY                               
